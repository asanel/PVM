@page "/editEmployee/{employeeId}"

@using System.Net.Http;
@using System.Net;
@using PVM.Client.Service
@using PVM.Models;
@using PVM.Client.Service.Repository;
@using PVM.Shared.DTOs

@inject IAccountRepository accountService;
@inject IDepartmentRepository departmentService;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient httpClient;

<PageTitle>Persnonaldaten</PageTitle>

@if (editModel == null)
{
    <p>Daten werden geladen...</p>
}


<div class="row">
    <div class="col-md-12">
        <EditForm Model="editModel" OnValidSubmit="SaveEmployee"  FormName="updateEmployee">
            <div class="form-row">
                <div class="col-md-4 mb-3">
                    <label>Vorname</label>
                    <InputText class="form-control"  @bind-Value="editModel.Employee.Firstname"  />
                </div>
                <div class="col-md-4 mb-3">
                    <label>Name</label>
                    <InputText class="form-control" @bind-Value="editModel.Employee.Lastname" />
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-4 mb-3">
                    <label>Stelle</label>
                    <InputText class="form-control" @bind-Value="editModel.Employee.Position" readonly />
                </div>
                <div class="col-md-4 mb-3">
                    <label>Stelle</label>
                    <InputText class="form-control" @bind-Value="editModel.Department" readonly />
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-6 mb-3">
                    <label>Straße</label>
                    <InputText class="form-control" @bind-Value="editModel.Address.Street"/>
                </div>
                <div class="col-md-3 mb-3">
                    <label>Hausnummer</label>
                    <InputText class="form-control" @bind-Value="editModel.Address.HouseNumber" />
                </div>
                <div class="col-md-3 mb-3">
                    <label>Postleitzahl</label>
                    <InputNumber class="form-control" @bind-Value="editModel.Address.ZipCode" />
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-4 mb-3">
                    <label>Stadt</label>
                    <InputText class="form-control" @bind-Value="editModel.Address.City" />
                </div>
                <div class="col-md-4 mb-3">
                    <label>Land</label>
                    <InputText class="form-control" @bind-Value="editModel.Address.Region" />
                </div>
                <div class="col-md-4 mb-3">
                    <label>Land</label>
                    <InputText class="form-control" @bind-Value="editModel.Address.Country" readonly />
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-4 mb-3">
                    <label>E-Mail Adresse</label>
                    <InputText type="email" class="form-control" @bind-Value="editModel.Employee.EmailAddress" />
                </div>
                <div class="col-md-4 mb-3">
                    <label>Telefonnummer</label>
                    <InputText type="tel" class="form-control" @bind-Value="editModel.Employee.PhoneNumber" />
                </div>
            </div>

            <div class="form-row">
                <label>Steuer-Id</label>
                <InputText class="form-control" @bind-Value="editModel.Employee.TaxId" />
            </div>

            <div class="form-row">
                <div class="col-md-4 mb-3">
                    <label>Geburtsdatum</label>
                    <InputDate class="form-control" @bind-Value="editModel.Employee.DateOfBirth" />
                </div>
                <div class="input-group col-md-4 mb-3">
                    <label class="input-group-text">Familienstand</label>
                    <InputSelect class="form-control" @bind-Value="editModel.Employee.MaritalStatus">
                        <option value="">@editModel.Employee.MaritalStatus</option>
                        <option value="Ledig">Ledig</option>
                        <option value="Verheiratet">Verheiratet</option>
                    </InputSelect>
                </div>
            </div>

            <button class="btn btn-primary" type="submit">Speichern</button>

        </EditForm> 
    </div>

</div>



@code {
    [SupplyParameterFromForm]
    public EditEmployeeModel editModel { get; set; } = new();
    [Parameter]
    public int employeeId {get; set; }

    private async Task SaveEmployee()
    {
        try
        {

            Console.WriteLine("Personal Daten updaten...");

            EmployeeDto employeeDto = new EmployeeDto
            {
                    Id = editModel.Employee.Id,
                    Firstname = editModel.Employee.Firstname,
                    Lastname = editModel.Employee.Lastname,
                    AddressId = editModel.Employee.AddressId,
                    EmailAddress = editModel.Employee.EmailAddress,
                    PhoneNumber = editModel.Employee.PhoneNumber,
                    MaritalStatus = editModel.Employee.MaritalStatus,
                    IsManager = editModel.Employee.IsManager,
                    Position = editModel.Employee.Position,
                    DepartmentId = editModel.Employee.DepartmentId,
                    TaxId = editModel.Employee.TaxId,
                    DateOfBirth = editModel.Employee.DateOfBirth
            };

            var resultAddress = await accountService.UpdateAddressAsync(editModel.Address);

            var result = await accountService.UpdateEmployeeAsync(employeeDto);

            if (result != null && resultAddress != null)
            {

                Console.WriteLine("Daten erfolgreich gespeichert!");
            }

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Fehler beim Speichern der Daten: {ex.Message}");
        }


    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await this.LoadEmployee();

            Console.WriteLine("Daten erfolgreich geladen.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Fehler beim Laden der Daten: {ex.Message}");
        }

    }

    private async Task LoadEmployee()
    {
        
            var response = await accountService.GetEmployeeByIdAsync(employeeId);
            if (response != null)
            {

                editModel.Employee = response;
                editModel.Address = response.Address;
                editModel.Department = response.Department.Name;
            }


        

    }

    public class EditEmployeeModel
    {
        public Employee Employee { get; set; } = new();
        public Address Address { get; set; } = new();
        public string Department { get; set; }
    }

}